{"version":3,"sources":["flipanimation/home.jsx","index.js"],"names":["Home","state","list","activeItem","title","note","open","inputTitle","inputNote","changedTitle","changedNote","componentDidMount","AOS","init","duration","x","localStorage","getItem","setState","JSON","parse","openItem","obj","console","log","addItem","indexOf","unshift","setItem","stringify","removeItem","filter","e","handleDialog","resetItem","length","Paper","className","elevation","type","placeholder","style","border","value","this","onChange","target","Fab","color","size","onClick","appearAnimation","leaveAnimation","staggerDelayBy","Grid","container","spacing","map","item","xs","md","sm","key","Typography","variant","fontWeight","fontSize","gutterBottom","Dialog","fullWidth","maxWidth","onClose","data-aos","DialogContent","defaultValue","IconButton","marginTop","marginBottom","Button","position","right","bottom","padding","textTransform","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ba637d7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport {\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  Fab,\r\n  Grid,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport \"./css/home.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    list: [],\r\n    activeItem: {\r\n      title: \"\",\r\n      note: \"\",\r\n    },\r\n    open: false,\r\n    inputTitle: \"\",\r\n    inputNote: \"\",\r\n    changedTitle: \"\",\r\n    changedNote: \"\",\r\n  };\r\n  componentDidMount = () => {\r\n    AOS.init({ duration: 300 });\r\n    var x = localStorage.getItem(\"list\");\r\n    if (x != null) {\r\n      this.setState({ list: JSON.parse(x) });\r\n    }\r\n  };\r\n  openItem = (obj) => {\r\n    console.log(obj);\r\n    this.setState({ open: true });\r\n    this.setState({\r\n      activeItem: {\r\n        title: obj[\"e\"][\"title\"],\r\n        note: obj[\"e\"][\"note\"],\r\n      },\r\n      changedNote: obj[\"e\"][\"note\"],\r\n      changedTitle: obj[\"e\"][\"title\"],\r\n    });\r\n  };\r\n  addItem = () => {\r\n    if (\r\n      (this.state.inputNote !== \"\" && this.state.inputNote.indexOf(\" \") != 0) ||\r\n      (this.state.inputTitle !== \"\" && this.state.inputTitle.indexOf(\" \") != 0)\r\n    ) {\r\n      var list = this.state.list;\r\n      var x = {\r\n        title: this.state.inputTitle,\r\n        note: this.state.inputNote,\r\n      };\r\n      list.unshift(x);\r\n      localStorage.setItem(\"list\", JSON.stringify(this.state.list));\r\n      this.setState({ inputNote: \"\", inputTitle: \"\" });\r\n    }\r\n  };\r\n  removeItem = () => {\r\n    var list = this.state.list.filter(\r\n      (e) => e.note != this.state.activeItem.note\r\n    );\r\n    localStorage.setItem(\"list\", JSON.stringify(list));\r\n    this.setState({ list });\r\n    this.handleDialog();\r\n  };\r\n  resetItem = () => {\r\n    var list = this.state.list;\r\n    for (var e = 0; e < list.length; e++) {\r\n      if (\r\n        list[e].title == this.state.activeItem.title &&\r\n        list[e].note == this.state.activeItem.note\r\n      ) {\r\n        list[e].note = this.state.changedNote;\r\n        list[e].title = this.state.changedTitle;\r\n      }\r\n    }\r\n\r\n    this.setState({ list });\r\n    localStorage.setItem(\"list\", JSON.stringify(list));\r\n    this.handleDialog();\r\n  };\r\n  handleDialog = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Paper className=\"input-paper\" elevation={2}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            className=\"title-input\"\r\n            style={{ border: \"none\" }}\r\n            value={this.state.inputTitle}\r\n            onChange={(e) => {\r\n              this.setState({ inputTitle: e.target.value });\r\n            }}\r\n          />\r\n\r\n          <textarea\r\n            className=\"para-input\"\r\n            placeholder=\"Take a Note\"\r\n            value={this.state.inputNote}\r\n            onChange={(e) => {\r\n              this.setState({ inputNote: e.target.value });\r\n            }}\r\n          />\r\n          <Fab\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fab\"\r\n            onClick={this.addItem}\r\n          >\r\n            <AddIcon size=\"small\" />{\" \"}\r\n          </Fab>\r\n        </Paper>\r\n        <div className=\"notes-wrapper\">\r\n          <FlipMove\r\n            appearAnimation=\"accordionVertical\"\r\n            leaveAnimation=\"elevator\"\r\n            duration=\"400\"\r\n            staggerDelayBy={400}\r\n          >\r\n            <Grid className=\"notes-grid\" container spacing={2}>\r\n              {this.state.list.map((e) => (\r\n                <Grid item xs={7} md={3} sm>\r\n                  <Paper\r\n                    key={e[\"title\"]}\r\n                    elevation={2}\r\n                    className=\"saved-note-paper\"\r\n                    onClick={() => {\r\n                      this.openItem({ e });\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      className=\"saved-title\"\r\n                      style={{ fontWeight: \"bold\", fontSize: \"0.9rem\" }}\r\n                      gutterBottom\r\n                    >\r\n                      {e.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" className=\"saved-note\">\r\n                      {e.note}\r\n                    </Typography>\r\n                  </Paper>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </FlipMove>\r\n        </div>\r\n        <Dialog\r\n          open={this.state.open}\r\n          fullWidth\r\n          maxWidth=\"xs\"\r\n          className=\"dialog\"\r\n          onClose={this.handleDialog}\r\n          data-aos=\"fade\"\r\n        >\r\n          <DialogContent className=\"dialog-content\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              className=\"title-input\"\r\n              style={{ border: \"none\" }}\r\n              defaultValue={this.state.activeItem.title}\r\n              onChange={(e) => {\r\n                this.setState({ changedTitle: e.target.value });\r\n              }}\r\n            />\r\n            <textarea\r\n              className=\"para-input\"\r\n              defaultValue={this.state.activeItem.note}\r\n              placeholder=\"Note\"\r\n              onChange={(e) => {\r\n                this.setState({ changedNote: e.target.value });\r\n              }}\r\n            />\r\n            <IconButton\r\n              size=\"small\"\r\n              className=\"delete-icon\"\r\n              style={{ marginTop: \"0px\", marginBottom: \"5px\" }}\r\n              onClick={this.removeItem}\r\n            >\r\n              <DeleteIcon size=\"small\" />\r\n            </IconButton>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"done-btn\"\r\n              style={{\r\n                position: \"absolute\",\r\n                right: \"15px\",\r\n                bottom: \"15px\",\r\n                fontSize: \"0.7rem\",\r\n                padding: \"4px 6px\",\r\n                textTransform: \"capitalize\",\r\n              }}\r\n              onClick={this.resetItem}\r\n            >\r\n              Done\r\n            </Button>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Home from \"./flipanimation/home\";\r\n\r\nReactDOM.render(<Home />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}